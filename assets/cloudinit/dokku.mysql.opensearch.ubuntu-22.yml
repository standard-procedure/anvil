#cloud-config
users:
  - name: %{USER}
    groups: users, admin, docker
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - %{PUBLIC_KEY}
packages:
  - fail2ban
  - ufw
  - wget
  - apt-transport-https
  - docker.io
  - docker-compose
  - mysql-client
  - libmysqlclient-dev
package_update: true
package_upgrade: true
runcmd:
  # General server setup
  - timedatectl set-timezone UTC
  # Prepare for OpenSearch
  - swapoff -a
  - echo "vm.max_map_count=262144" > /etc/sysctl.d/98-opensearch.conf
  - sysctl -p /etc/sysctl.d/98-opensearch.conf
  # Install MySQL
  - echo "mysql-server mysql-server/root_password password root" | sudo debconf-set-selections
  - echo "mysql-server mysql-server/root_password_again password root" | sudo debconf-set-selections
  - sudo apt-get -y install mysql-server
  - |
    cat >> /etc/mysql/mysql.conf.d/utf8.cnf << CONF
    [client]
    default-character-set=utf8mb4

    [mysql]
    default-character-set=utf8mb4

    [mysqld]
    init_connect='SET collation_connection = utf8mb4_unicode_ci'
    init_connect='SET NAMES utf8mb4'
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci
    skip-character-set-client-handshake
    CONF
  - sed -i -e '/^\(#\|\)bind-address/s/^.*$/bind-address = 0.0.0.0/' /etc/mysql/mysql.conf.d/mysqld.cnf
  # Start MySQL
  - systemctl start mysql.service
  # Fail2Ban setup
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  # UFW and SSH setup
  - ufw allow 22/tcp
  - ufw allow 80/tcp
  - ufw allow 443/tcp
  - ufw enable
  # Harden SSH
  - sed -i -e '/^\(#\|\)PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 2/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowTcpForwarding/s/^.*$/AllowTcpForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
  - sed -i '$a AllowUsers %{USER} dokku' /etc/ssh/sshd_config
  # Dokku setup
  - echo "dokku dokku/vhost_enable boolean true" | sudo debconf-set-selections
  - wget https://dokku.com/install/v0.30.7/bootstrap.sh && sudo DOKKU_TAG=v0.30.7 bash bootstrap.sh
  - cat /home/%{USER}/.ssh/authorized_keys | dokku ssh-keys:add admin
  - dokku plugin:install https://github.com/dokku/dokku-cron-restart.git cron-restart
  - dokku plugin:install https://github.com/dokku/dokku-maintenance.git maintenance
  - dokku plugin:install https://github.com/dokku/dokku-redis.git redis
  - dokku plugin:install https://github.com/dokku/dokku-mariadb.git mariadb
  - dokku plugin:install https://github.com/dokku/dokku-memcached.git memcached
  - dokku plugin:install https://github.com/dokku/dokku-letsencrypt.git letsencrypt
  - dokku config:set --global DOKKU_LETSENCRYPT_EMAIL=sysadmin@echodek.co
  - dokku git:set --global deploy-branch main
  # OpenSearch setup
  - mkdir -p /etc/opensearch
  - docker pull opensearchproject/opensearch:latest
  - docker pull opensearchproject/opensearch-dashboards:latest
  - |
    cat >> /etc/opensearch/docker-compose.yml << EOF
    version: '3'
    services:
      search_db:
        image: opensearchproject/opensearch:latest
        container_name: search_db
        environment:
          - discovery.type=single-node
          - node.name=search_db
          - bootstrap.memory_lock=true
          - plugins.security.disabled=true
          - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m"
        ulimits:
          memlock:
            soft: -1
            hard: -1
          nofile:
            soft: 65536
            hard: 65536
        volumes:
          - opensearch_data:/usr/share/opensearch/data
        ports:
          - 9200:9200
          - 9600:9600
    volumes:
      opensearch_data:
    EOF
  - |
    cat >> /etc/systemd/system/opensearch.service << EOF
    Description=OpenSearch container
    Requires=docker.service
    After=docker.service
    [Service]
    WorkingDirectory=/etc/opensearch
    Restart=always
    ExecStart=/usr/bin/docker-compose up
    ExecStop=/usr/bin/docker-compose down
    [Install]
    WantedBy=multi-user.target
    EOF
  - systemctl daemon-reload
  - systemctl enable opensearch.service
  - service opensearch start
  - reboot
